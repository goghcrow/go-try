//go:build !try

// Code generated by github.com/goghcrow/go-try DO NOT EDIT.
package test

func blank_in_range() error {
	𝘃𝗮𝗹𝟭, 𝗲𝗿𝗿𝟭 := ret1Err[[]int]()
	if 𝗲𝗿𝗿𝟭 != nil {
		return 𝗲𝗿𝗿𝟭
	}
	for _, _ = range 𝘃𝗮𝗹𝟭 {
	}
	𝘃𝗮𝗹𝟮, 𝗲𝗿𝗿𝟮 := ret1Err[[]int]()
	if 𝗲𝗿𝗿𝟮 != nil {
		return 𝗲𝗿𝗿𝟮
	}
	for _ = range 𝘃𝗮𝗹𝟮 {
	}
	return nil
}
func blank_in_map_index() error {
	{
		𝘃𝗮𝗹𝟭, 𝗲𝗿𝗿𝟭 := ret1Err[int]()
		if 𝗲𝗿𝗿𝟭 != nil {
			return 𝗲𝗿𝗿𝟭
		}
		_ = map[int]int{}[𝘃𝗮𝗹𝟭]
	}
	{
		𝘃𝗮𝗹𝟮, 𝗲𝗿𝗿𝟮 := ret1Err[int]()
		if 𝗲𝗿𝗿𝟮 != nil {
			return 𝗲𝗿𝗿𝟮
		}
		_, _ = map[int]int{}[𝘃𝗮𝗹𝟮]
	}
	{
		𝘃𝗮𝗹𝟯, 𝗲𝗿𝗿𝟯 := ret1Err[int]()
		if 𝗲𝗿𝗿𝟯 != nil {
			return 𝗲𝗿𝗿𝟯
		}
		_, _ = map[any]int{}[𝘃𝗮𝗹𝟯]
	}
	{
		type Nil any
		𝘃𝗮𝗹𝟰, 𝗲𝗿𝗿𝟰 := ret1Err[int]()
		if 𝗲𝗿𝗿𝟰 != nil {
			return 𝗲𝗿𝗿𝟰
		}
		_, _ = map[Nil]int{}[𝘃𝗮𝗹𝟰]
	}
	return nil
}
func blank_in_select() error {
	ch := (<-chan int)(nil)
	𝘃𝗮𝗹𝟭, 𝗲𝗿𝗿𝟭 := ret1Err[chan int]()
	if 𝗲𝗿𝗿𝟭 != nil {
		return 𝗲𝗿𝗿𝟭
	}
	select {
	case _, _ = <-ch:
	case _, _ = <-𝘃𝗮𝗹𝟭:
	default:
	}
	return nil
}
